name: 🚥 Status Checks
on: push

jobs:
  tests:
    name: 👀 Evaluate on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Don't cancel other OS runners if one fails.
      fail-fast: false
      matrix:
        # Put the operating systems you want to run on here.
        os: [ windows-latest]
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - uses: actions/checkout@v3
        name: 🧾 Checkout

      - uses: actions/setup-dotnet@v3
        name: 💽 Setup .NET SDK
        with:
          # Use the .NET SDK from global.json in the root of the repository.
          global-json-file: global.json

      - name: 📦 Restore Dependencies
        run: dotnet restore FabulaUltimaCampaignManager

      - uses: chickensoft-games/setup-godot@v1
        name: 🤖 Setup Godot
        with:
          # Version must include major, minor, and patch, and be >= 4.0.0
          # Pre-release label is optional.
          version: 4.3.0-stable # also valid: 4.0.0.rc1 or 4.0.0, etc
          # Use .NET-enabled version of Godot (the default is also true).
          use-dotnet: true
          # Include the Godot Export Templates (the default is false).
          include-templates: true

      - name: 🔬 Verify Setup
        run: |
          dotnet --version
          godot --version

      - name: 🧑‍🔬 Generate .NET Bindings
        run: godot --headless --build-solutions --quit --path FabulaUltimaCampaignManager || exit 0

      - name: 🦺 Build Projects
        run: dotnet build FabulaUltimaCampaignManager

      - name: 🦺 Run Unit Tests
        run: dotnet test FabulaUltimaDataImporter

      - uses: MikeSchulze/gdunit4-action@v1
        name: run gdunit tests
        with:
          godot-version: '4.3.0'
          godot-net: true
          project_dir: './FabulaUltimaCampaignManager/'
          paths: 'res://Tests'
